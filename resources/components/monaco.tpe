<div id=":props.id + '-monaco-editor'" style=":`height: ${props.height}; width: ${props.width}`"></div>
<input type="hidden" name=":props.id" id=":props.id + '-hidden-input'">
<script src="https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.20.0/min/vs/loader.min.js"></script>
<script>{`
var decodeHTML = function (html) {
  var txt = document.createElement("textarea");
  txt.innerHTML = html;
  return txt.value;
};

require.config({
  paths: {
    vs: "https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.20.0/min/vs",
  },
});
window.MonacoEnvironment = { getWorkerUrl: () => proxy };
var proxy = URL.createObjectURL(
  new Blob(
    [
      [
        "self.MonacoEnvironment = {",
        "baseUrl: 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.20.0/min'",
        "};",
        "importScripts('https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.20.0/min/vs/base/worker/workerMain.min.js');",
      ].join(''),
    ],
    { type: "text/javascript" }
  )
);

var text = '${props.default.replace(/\r\n/gm, "\\n").replace(/\n/gm, "\\n").replace(/'/gm, "\\'")}';
document.getElementById('${props.id + '-hidden-input'}').value = text;
require(["vs/editor/editor.main"], function () {
  var editor = monaco.editor.create(document.getElementById("${props.id + '-monaco-editor'}"), {
    value: decodeHTML(text),
    language: "${props.language}",
    theme: "vs",
  });

  editor.onDidChangeModelContent(function () {
    var value = editor.getValue();
    document.getElementById('${props.id + '-hidden-input'}').value = value;
  });
});
`}</script>